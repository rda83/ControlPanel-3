version: '3.8'

services:
  controlpanel.server:
    build:
      context: .
      dockerfile: ControlPanel.Server/Dockerfile
    ports:
      - "5000:8080"
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=controlpanel.db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
      - Jwt__Key=${JWT_KEY}
      - Jwt__ExpiryInMinutes=${JWT_ACCESS_TOKEN_EXPIRATION_MINUTES}
    depends_on:
      - controlpanel.db
    networks:
      - controlpanel-network

  controlpanel.ui:
    build:
      context: .
      dockerfile: ControlPanel.Ui/Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - controlpanel.server
    networks:
      - controlpanel-network

  controlpanel.db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - controlpanel-network

networks:
  controlpanel-network:
    driver: bridge
    
volumes:
  postgres_data:
    driver: local